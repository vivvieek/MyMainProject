{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\ViveK\\Documents\\FSD\\Main_project\\Frontend\\src\\app\\pages\\login\\login.component.ts"],"sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { LoginService } from 'src/app/shared/link.service';\r\nimport { LoginFormVisibilityService } from 'src/app/shared/login-form-visiblity.service';\r\nimport { rou}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  email: string = '';\r\n  password: string = '';\r\n  showLoginForm: boolean = false;\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private loginFormVisibilityService: LoginFormVisibilityService,\r\n    private router:Router\r\n  ) {\r\n    this.loginFormVisibilityService.showLoginForm$.subscribe(\r\n      (visibility: boolean) => {\r\n        this.showLoginForm = visibility;\r\n      }\r\n    );\r\n  }\r\n\r\n  @Output() submitted = new EventEmitter<void>();\r\n  @Output() loginFormOpened = new EventEmitter<boolean>();\r\n\r\n  toggleLoginForm() {\r\n    this.showLoginForm = !this.showLoginForm;\r\n    this.loginFormVisibilityService.setShowLoginFormVisibility(this.showLoginForm);\r\n    this.loginFormOpened.emit(this.showLoginForm);\r\n  }\r\n\r\n  onSubmit() {\r\n    // Implement your login logic here\r\n    // For simplicity, we will just consider a successful login\r\n    // You can add proper validation and authentication logic here\r\n\r\n    // Emit the 'submitted' event when the form is submitted\r\n    this.submitted.emit();\r\n\r\n    // Call the login service to perform the API call to your backend server\r\n    this.loginService.login(this.email, this.password).subscribe(\r\n      (response) => {\r\n        // Login successful\r\n        alert('Login successful');\r\n        // You can perform further actions here, such as redirecting the user to a dashboard page.\r\n        this.loginFormVisibilityService.setShowLoginFormVisibility(false);\r\n        this.loginFormVisibilityService.setLoggedIn(true);\r\n        this.router.navigate(['home']);\r\n      },\r\n      (error) => {\r\n        // Login failed\r\n        alert('Invalid credentials');\r\n      }\r\n    );\r\n  }\r\n\r\n  onCancel() {\r\n    // Close the login form by hiding it\r\n    this.loginFormVisibilityService.setShowLoginFormVisibility(false);\r\n  }\r\n}\r\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}