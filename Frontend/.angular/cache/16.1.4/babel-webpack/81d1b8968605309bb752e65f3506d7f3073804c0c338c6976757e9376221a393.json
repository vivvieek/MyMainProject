{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Output, EventEmitter } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(loginFormVisibilityService) {\n    this.loginFormVisibilityService = loginFormVisibilityService;\n    this.email = '';\n    this.password = '';\n    this.submitted = new EventEmitter();\n    this.loginFormOpened = new EventEmitter();\n  }\n  toggleLoginForm() {\n    this.showLoginForm = !this.showLoginForm;\n    this.loginFormOpened.emit(this.showLoginForm);\n  }\n  onSubmit() {\n    // Implement your login logic here\n    // For simplicity, we will just consider a successful login\n    // You can add proper validation and authentication logic here\n    // Emit the 'submitted' event when the form is submitted\n    this.submitted.emit();\n  }\n  showLogoutButton() {\n    // Show the logout button in the navbar\n    const navbarComponent = document.querySelector('app-navbar');\n    if (navbarComponent) {\n      navbarComponent.loggedIn = true;\n    }\n  }\n};\n__decorate([Output()], LoginComponent.prototype, \"submitted\", void 0);\n__decorate([Output()], LoginComponent.prototype, \"loginFormOpened\", void 0);\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","Output","EventEmitter","LoginComponent","constructor","loginFormVisibilityService","email","password","submitted","loginFormOpened","toggleLoginForm","showLoginForm","emit","onSubmit","showLogoutButton","navbarComponent","document","querySelector","loggedIn","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Main_project\\Frontend\\src\\app\\pages\\login\\login.component.ts"],"sourcesContent":["import { Component, Output ,EventEmitter } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  email: string ='';\r\n  password: string = '';\r\n\r\n  constructor(private loginFormVisibilityService: LoginFormVisibilityService) {}\r\n  \r\n  @Output() submitted = new EventEmitter<void>();\r\n  @Output() loginFormOpened = new EventEmitter<boolean>();\r\n\r\n  toggleLoginForm() {\r\n    this.showLoginForm = !this.showLoginForm;\r\n    this.loginFormOpened.emit(this.showLoginForm);\r\n  }\r\n\r\n   onSubmit() {\r\n    // Implement your login logic here\r\n    // For simplicity, we will just consider a successful login\r\n    // You can add proper validation and authentication logic here\r\n\r\n    // Emit the 'submitted' event when the form is submitted\r\n    this.submitted.emit();\r\n  }\r\n\r\n  private showLogoutButton() {\r\n    // Show the logout button in the navbar\r\n    const navbarComponent: any = document.querySelector('app-navbar');\r\n    if (navbarComponent) {\r\n      navbarComponent.loggedIn = true;\r\n    }\r\n  }\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAQxD,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,0BAAsD;IAAtD,KAAAA,0BAA0B,GAA1BA,0BAA0B;IAH9C,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,QAAQ,GAAW,EAAE;IAIX,KAAAC,SAAS,GAAG,IAAIN,YAAY,EAAQ;IACpC,KAAAO,eAAe,GAAG,IAAIP,YAAY,EAAW;EAHsB;EAK7EQ,eAAeA,CAAA;IACb,IAAI,CAACC,aAAa,GAAG,CAAC,IAAI,CAACA,aAAa;IACxC,IAAI,CAACF,eAAe,CAACG,IAAI,CAAC,IAAI,CAACD,aAAa,CAAC;EAC/C;EAECE,QAAQA,CAAA;IACP;IACA;IACA;IAEA;IACA,IAAI,CAACL,SAAS,CAACI,IAAI,EAAE;EACvB;EAEQE,gBAAgBA,CAAA;IACtB;IACA,MAAMC,eAAe,GAAQC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;IACjE,IAAIF,eAAe,EAAE;MACnBA,eAAe,CAACG,QAAQ,GAAG,IAAI;;EAEnC;CACD;AAxBWC,UAAA,EAATlB,MAAM,EAAE,C,gDAAsC;AACrCkB,UAAA,EAATlB,MAAM,EAAE,C,sDAA+C;AAP7CE,cAAc,GAAAgB,UAAA,EAL1BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWnB,cAAc,CA8B1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}