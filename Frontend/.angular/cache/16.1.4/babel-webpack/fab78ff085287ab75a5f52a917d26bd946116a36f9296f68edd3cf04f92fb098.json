{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/login'; // Replace with your backend API URL\n  }\n  // Method to handle the login request\n  login(email, password) {\n    const loginData = {\n      email,\n      password\n    };\n    return this.http.post(this.apiUrl, loginData);\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LoginService","constructor","http","apiUrl","login","email","password","loginData","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\Main_project\\Frontend\\src\\app\\shared\\link.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService {\r\n  private apiUrl = 'http://localhost:3000/login'; // Replace with your backend API URL\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Method to handle the login request\r\n  login(email: string, password: string): Observable<any> {\r\n    const loginData = { email, password };\r\n    return this.http.post<any>(this.apiUrl, loginData);\r\n  }\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,6BAA6B,CAAC,CAAC;EAET;EAEvC;EACAC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,MAAMC,SAAS,GAAG;MAAEF,KAAK;MAAEC;IAAQ,CAAE;IACrC,OAAO,IAAI,CAACJ,IAAI,CAACM,IAAI,CAAM,IAAI,CAACL,MAAM,EAAEI,SAAS,CAAC;EACpD;;AATWP,YAAY,C;mBAAZA,YAAY,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZZ,YAAY,C;SAAZA,YAAY;EAAAa,OAAA,EAAZb,YAAY,CAAAc,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}