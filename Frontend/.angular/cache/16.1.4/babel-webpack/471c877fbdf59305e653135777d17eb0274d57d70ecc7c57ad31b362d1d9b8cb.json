{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor() {\n    this.email = '';\n    this.password = '';\n  }\n  onSubmit() {\n    // Implement your login logic here\n    // For simplicity, we will just consider a successful login\n    // You can add proper validation and authentication logic here\n    this.showLogoutButton();\n  }\n  showLogoutButton() {\n    // Show the logout button in the navbar\n    const navbarComponent = document.querySelector('app-navbar');\n    if (navbarComponent) {\n      navbarComponent.loggedIn = true;\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)();\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"heading\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"placeid\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"submit\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n      i0.ɵɵtext(3, \"User Log-In\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  styles: [\"\\n\\n\\n\\n.container[_ngcontent-%COMP%] {\\n    max-width: 400px; \\n\\n    margin: 0 auto;\\n    background-color: #fff; \\n\\n    border: 1px solid #007bff; \\n\\n    border-radius: 5px; \\n\\n    padding: 20px;\\n    box-shadow: 0 2px 4px rgba(58, 58, 170, 0.9); \\n\\n  }\\n  \\n  .heading[_ngcontent-%COMP%] {\\n    text-align: center;\\n    color: #fff; \\n\\n    background-color: #007bff; \\n\\n    padding: 10px;\\n    margin-bottom: 15px;\\n    border-radius: 10px; \\n\\n  }\\n  \\n\\n.form-group[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n  border: 1px solid #007bff;\\n  color: #007bff; \\n\\n}\\n\\n\\n\\n.form-group[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%]::placeholder, .form-group[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%]::placeholder {\\n  color: #b3d7ff; \\n\\n}\\n  \\n  .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    color: #fff; \\n\\n  }\\n  \\n  \\n\\n  .form-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    background-color: #007bff;\\n  }\\n  \\n  \\n\\n  .form-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n    background-color: #0056b3;\\n  }\\n  #submit[_ngcontent-%COMP%]{\\n    margin-left: 140px;\\n    margin-top: 20px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0I7QUFDeEIsd0JBQXdCO0FBQ3hCO0lBQ0ksZ0JBQWdCLEVBQUUsK0JBQStCO0lBQ2pELGNBQWM7SUFDZCxzQkFBc0IsRUFBRSw2Q0FBNkM7SUFDckUseUJBQXlCLEVBQUUsZ0JBQWdCO0lBQzNDLGtCQUFrQixFQUFFLG9CQUFvQjtJQUN4QyxhQUFhO0lBQ2IsNENBQTRDLEVBQUUsNEJBQTRCO0VBQzVFOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLFdBQVcsRUFBRSxxQkFBcUI7SUFDbEMseUJBQXlCLEVBQUUsMENBQTBDO0lBQ3JFLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsbUJBQW1CLEVBQUUsb0NBQW9DO0VBQzNEO0VBQ0EsdURBQXVEO0FBQ3pEOztFQUVFLHlCQUF5QjtFQUN6QixjQUFjLEVBQUUsMkJBQTJCO0FBQzdDOztBQUVBLDBDQUEwQztBQUMxQzs7RUFFRSxjQUFjLEVBQUUsaUNBQWlDO0FBQ25EOztFQUVFOzs7O0lBSUUsV0FBVyxFQUFFLHFCQUFxQjtFQUNwQzs7RUFFQSwwQ0FBMEM7RUFDMUM7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUEsZ0VBQWdFO0VBQ2hFO0lBQ0UseUJBQXlCO0VBQzNCO0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0VBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLyogbG9naW4uY29tcG9uZW50LmNzcyAqL1xyXG4vKiBsb2dpbi5jb21wb25lbnQuY3NzICovXHJcbi5jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDsgLyogQWRqdXN0IHRoZSB3aWR0aCBhcyBuZWVkZWQgKi9cclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgLyogV2hpdGUgYmFja2dyb3VuZCBjb2xvciBmb3IgdGhlIGNvbnRhaW5lciAqL1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwN2JmZjsgLyogQmx1ZSBib3JkZXIgKi9cclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgLyogUm91bmRlZCBjb3JuZXJzICovXHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoNTgsIDU4LCAxNzAsIDAuOSk7IC8qIEFkZCBhIHN1YnRsZSBib3ggc2hhZG93ICovXHJcbiAgfVxyXG4gIFxyXG4gIC5oZWFkaW5nIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiAjZmZmOyAvKiBXaGl0ZSBmb250IGNvbG9yICovXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmOyAvKiBCbHVlIGJhY2tncm91bmQgY29sb3IgZm9yIHRoZSBoZWFkaW5nICovXHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7IC8qIFJvdW5kZWQgY29ybmVycyBmb3IgdGhlIGhlYWRpbmcgKi9cclxuICB9XHJcbiAgLyogQmx1ZSBib3JkZXIgZm9yIHRoZSBlbWFpbCBhbmQgcGFzc3dvcmQgaW5wdXQgYm94ZXMgKi9cclxuLmZvcm0tZ3JvdXAgaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxyXG4uZm9ybS1ncm91cCBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDdiZmY7XHJcbiAgY29sb3I6ICMwMDdiZmY7IC8qIFNldCB0ZXh0IGNvbG9yIHRvIGJsdWUgKi9cclxufVxyXG5cclxuLyogTGlnaHQgYmx1ZSBjb2xvciBmb3IgdGhlIHBsYWNlaG9sZGVycyAqL1xyXG4uZm9ybS1ncm91cCBpbnB1dFt0eXBlPVwiZW1haWxcIl06OnBsYWNlaG9sZGVyLFxyXG4uZm9ybS1ncm91cCBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl06OnBsYWNlaG9sZGVyIHtcclxuICBjb2xvcjogI2IzZDdmZjsgLyogTGlnaHQgYmx1ZSBwbGFjZWhvbGRlciBjb2xvciAqL1xyXG59XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAgbGFiZWwsXHJcbiAgLmZvcm0tZ3JvdXAgaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxyXG4gIC5mb3JtLWdyb3VwIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcclxuICAuZm9ybS1ncm91cCBidXR0b24ge1xyXG4gICAgY29sb3I6ICNmZmY7IC8qIFdoaXRlIHRleHQgY29sb3IgKi9cclxuICB9XHJcbiAgXHJcbiAgLyogQmx1ZSBiYWNrZ3JvdW5kIGZvciB0aGUgc3VibWl0IGJ1dHRvbiAqL1xyXG4gIC5mb3JtLWdyb3VwIGJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gIH1cclxuICBcclxuICAvKiBBZGQgYSBkYXJrZXIgYmx1ZSBiYWNrZ3JvdW5kIGZvciB0aGUgc3VibWl0IGJ1dHRvbiBvbiBob3ZlciAqL1xyXG4gIC5mb3JtLWdyb3VwIGJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xyXG4gIH1cclxuICAjc3VibWl0e1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE0MHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","email","password","onSubmit","showLogoutButton","navbarComponent","document","querySelector","loggedIn","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_input_ngModelChange_8_listener","$event","LoginComponent_Template_input_ngModelChange_12_listener","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Main_project\\Frontend\\src\\app\\pages\\login\\login.component.ts","E:\\Main_project\\Frontend\\src\\app\\pages\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  email: string ='';\r\n  password: string = '';\r\n  \r\n\r\n  onSubmit() {\r\n    // Implement your login logic here\r\n    // For simplicity, we will just consider a successful login\r\n    // You can add proper validation and authentication logic here\r\n    this.showLogoutButton();\r\n  }\r\n\r\n  private showLogoutButton() {\r\n    // Show the logout button in the navbar\r\n    const navbarComponent: any = document.querySelector('app-navbar');\r\n    if (navbarComponent) {\r\n      navbarComponent.loggedIn = true;\r\n    }\r\n  }\r\n}\r\n\r\n","<!-- login.component.html -->\r\n<div class=\"container mt-4\">\r\n  <div class=\"heading\">\r\n    <h3>User Log-In</h3>\r\n  </div>\r\n  <form (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email</label>\r\n      <input type=\"email\" class=\"form-control\" placeid=\"email\" name=\"email\" required [(ngModel)]=\"email\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password</label>\r\n      <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" required [(ngModel)]=\"password\">\r\n    </div>\r\n    <button id=\"submit\" type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAL3BC,YAAA;IAME,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,QAAQ,GAAW,EAAE;;EAGrBC,QAAQA,CAAA;IACN;IACA;IACA;IACA,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEQA,gBAAgBA,CAAA;IACtB;IACA,MAAMC,eAAe,GAAQC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;IACjE,IAAIF,eAAe,EAAE;MACnBA,eAAe,CAACG,QAAQ,GAAG,IAAI;;EAEnC;;AAlBWT,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;QAAdA,cAAc;EAAAU,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCN3BE,EAAA,CAAAC,cAAA,aAA4B;MAEpBD,EAAA,CAAAE,MAAA,kBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAEtBH,EAAA,CAAAC,cAAA,cAA8B;MAAxBD,EAAA,CAAAI,UAAA,sBAAAC,iDAAA;QAAA,OAAYN,GAAA,CAAAb,QAAA,EAAU;MAAA,EAAC;MAC3Bc,EAAA,CAAAC,cAAA,aAAwB;MACHD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAChCH,EAAA,CAAAC,cAAA,eAAmG;MAApBD,EAAA,CAAAI,UAAA,2BAAAE,uDAAAC,MAAA;QAAA,OAAAR,GAAA,CAAAf,KAAA,GAAAuB,MAAA;MAAA,EAAmB;MAAlGP,EAAA,CAAAG,YAAA,EAAmG;MAErGH,EAAA,CAAAC,cAAA,aAAwB;MACAD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACtCH,EAAA,CAAAC,cAAA,gBAA0G;MAAvBD,EAAA,CAAAI,UAAA,2BAAAI,wDAAAD,MAAA;QAAA,OAAAR,GAAA,CAAAd,QAAA,GAAAsB,MAAA;MAAA,EAAsB;MAAzGP,EAAA,CAAAG,YAAA,EAA0G;MAE5GH,EAAA,CAAAC,cAAA,iBAA0D;MAAAD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MANQH,EAAA,CAAAS,SAAA,GAAmB;MAAnBT,EAAA,CAAAU,UAAA,YAAAX,GAAA,CAAAf,KAAA,CAAmB;MAIfgB,EAAA,CAAAS,SAAA,GAAsB;MAAtBT,EAAA,CAAAU,UAAA,YAAAX,GAAA,CAAAd,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}