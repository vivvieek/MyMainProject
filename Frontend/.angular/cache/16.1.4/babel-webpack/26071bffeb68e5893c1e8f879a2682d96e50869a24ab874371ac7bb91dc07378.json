{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let NavbarComponent = class NavbarComponent {\n  constructor(loginFormVisibilityService) {\n    this.loginFormVisibilityService = loginFormVisibilityService;\n    this.showLoginForm = false;\n    this.loginFormVisibilityService.showLoginForm$.subscribe(visibility => {\n      this.showLoginForm = visibility;\n    });\n  }\n  login() {\n    this.loginFormVisibilityService.setShowLoginFormVisibility(true);\n    this.showLoginForm = true;\n  }\n  onLoginSubmitted() {\n    // This function will be called when the login form is submitted\n    // Implement your login logic here\n    // For simplicity, we will just consider a successful login\n    this.loginFormVisibilityService.setLoggedIn(true);\n  }\n  onCancel() {\n    this.loginFormVisibilityService.setShowLoginFormVisibility(false);\n  }\n};\nNavbarComponent = __decorate([Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})], NavbarComponent);","map":{"version":3,"names":["Component","NavbarComponent","constructor","loginFormVisibilityService","showLoginForm","showLoginForm$","subscribe","visibility","login","setShowLoginFormVisibility","onLoginSubmitted","setLoggedIn","onCancel","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ViveK\\Documents\\FSD\\Main_project\\Frontend\\src\\app\\pages\\landingpage\\navbar.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { LoginFormVisibilityService } from 'src/app/shared/login-form-visiblity.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent {\r\n  showLoginForm: boolean = false;\r\n\r\n  constructor(private loginFormVisibilityService: LoginFormVisibilityService) {\r\n    this.loginFormVisibilityService.showLoginForm$.subscribe(\r\n      (visibility: boolean) => {\r\n        this.showLoginForm = visibility;\r\n      }\r\n    );\r\n  }\r\n\r\n  login() {\r\n    this.loginFormVisibilityService.setShowLoginFormVisibility(true);\r\n    this.showLoginForm = true;\r\n  }\r\n\r\n  onLoginSubmitted() {\r\n    // This function will be called when the login form is submitted\r\n    // Implement your login logic here\r\n    // For simplicity, we will just consider a successful login\r\n    this.loginFormVisibilityService.setLoggedIn(true);\r\n  }\r\n\r\n  onCancel() {\r\n    this.loginFormVisibilityService.setShowLoginFormVisibility(false);\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAG1BC,YAAoBC,0BAAsD;IAAtD,KAAAA,0BAA0B,GAA1BA,0BAA0B;IAF9C,KAAAC,aAAa,GAAY,KAAK;IAG5B,IAAI,CAACD,0BAA0B,CAACE,cAAc,CAACC,SAAS,CACrDC,UAAmB,IAAI;MACtB,IAAI,CAACH,aAAa,GAAGG,UAAU;IACjC,CAAC,CACF;EACH;EAEAC,KAAKA,CAAA;IACH,IAAI,CAACL,0BAA0B,CAACM,0BAA0B,CAAC,IAAI,CAAC;IAChE,IAAI,CAACL,aAAa,GAAG,IAAI;EAC3B;EAEAM,gBAAgBA,CAAA;IACd;IACA;IACA;IACA,IAAI,CAACP,0BAA0B,CAACQ,WAAW,CAAC,IAAI,CAAC;EACnD;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACT,0BAA0B,CAACM,0BAA0B,CAAC,KAAK,CAAC;EACnE;CACD;AA1BYR,eAAe,GAAAY,UAAA,EAL3Bb,SAAS,CAAC;EACTc,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWf,eAAe,CA0B3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}