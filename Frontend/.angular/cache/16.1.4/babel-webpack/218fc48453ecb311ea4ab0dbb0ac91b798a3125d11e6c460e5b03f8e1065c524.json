{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserDataService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000'; // Replace with your backend API URL\n  }\n\n  getUsers() {\n    return this.http.get(`${this.baseUrl}/users`);\n  }\n  getUserById(id) {\n    return this.http.get(`${this.baseUrl}/users/${id}`);\n  }\n  addUser(user) {\n    return this.http.post(`${this.baseUrl}/users`, user);\n  }\n  updateUser(id, user) {\n    return this.http.put(`${this.baseUrl}/users/${id}`, user);\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.baseUrl}/users/${id}`);\n  }\n}\nUserDataService.ɵfac = function UserDataService_Factory(t) {\n  return new (t || UserDataService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserDataService,\n  factory: UserDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UserDataService","constructor","http","baseUrl","getUsers","get","getUserById","id","addUser","user","post","updateUser","put","deleteUser","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\Main_project\\Frontend\\src\\app\\userdata.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserDataService {\r\n  private baseUrl = 'http://localhost:3000'; // Replace with your backend API URL\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<any[]>(`${this.baseUrl}/users`);\r\n  }\r\n\r\n  getUserById(id: string): Observable<User> {\r\n    return this.http.get<User>(`${this.baseUrl}/users/${id}`);\r\n  }\r\n\r\n  addUser(user: User): Observable<User> {\r\n    return this.http.post<User>(`${this.baseUrl}/users`, user);\r\n  }\r\n\r\n  updateUser(id: string, user: User): Observable<User> {\r\n    return this.http.put<User>(`${this.baseUrl}/users/${id}`, user);\r\n  }\r\n\r\n  deleteUser(id: string): Observable<User> {\r\n    return this.http.delete<User>(`${this.baseUrl}/users/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,uBAAuB,CAAC,CAAC;EAEJ;;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,OAAO,QAAQ,CAAC;EACtD;EAEAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,OAAO,UAAUI,EAAE,EAAE,CAAC;EAC3D;EAEAC,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,GAAG,IAAI,CAACP,OAAO,QAAQ,EAAEM,IAAI,CAAC;EAC5D;EAEAE,UAAUA,CAACJ,EAAU,EAAEE,IAAU;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACT,OAAO,UAAUI,EAAE,EAAE,EAAEE,IAAI,CAAC;EACjE;EAEAI,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,OAAO,UAAUI,EAAE,EAAE,CAAC;EAC9D;;AAvBWP,eAAe,C;mBAAfA,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAflB,eAAe,C;SAAfA,eAAe;EAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}