{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/notification.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AddnotificationComponent_ul_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\", 11)(1, \"li\", 12)(2, \"i\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AddnotificationComponent_ul_14_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.delmess(item_r3._id));\n    });\n    i0.ɵɵelementStart(5, \"span\", 15);\n    i0.ɵɵelement(6, \"i\", 16);\n    i0.ɵɵtext(7, \" Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.notificationmess, \" \");\n  }\n}\nexport class AddnotificationComponent {\n  constructor(serv) {\n    this.serv = serv;\n    this.notification = {\n      notificationmess: ''\n    };\n  }\n  ngOnInit() {\n    this.fetchmessage();\n  }\n  submit() {\n    this.serv.addmessage(this.notification).subscribe(res => {\n      alert('Message posted on homepage');\n      this.notification = {\n        notificationmess: ''\n      };\n      this.fetchmessage(); // Fetch messages again after posting a new message\n    });\n  }\n\n  delmess(id) {\n    this.serv.delmessage(id).subscribe(data => console.log(data));\n    alert('Message deleted');\n    this.fetchmessage(); // Fetch messages again after deleting a message\n  }\n\n  fetchmessage() {\n    this.serv.viewmessage().subscribe(data => {\n      this.notifications = data;\n      console.log(this.notifications);\n    });\n  }\n}\nAddnotificationComponent.ɵfac = function AddnotificationComponent_Factory(t) {\n  return new (t || AddnotificationComponent)(i0.ɵɵdirectiveInject(i1.NotificationService));\n};\nAddnotificationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddnotificationComponent,\n  selectors: [[\"app-addnotification\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [\"addmess\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"notification\", 1, \"text-primary\"], [\"type\", \"text\", \"id\", \"notification\", \"placeholder\", \"Message...\", \"name\", \"notificationmess\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"notificationmess\", \"ngModel\"], [\"type\", \"submit\", 1, \"button-86\"], [1, \"bi\", \"bi-cloud-upload\"], [1, \"lead\"], [1, \"oldnotimess\"], [\"class\", \"list-group\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group\"], [1, \"list-group-item\"], [1, \"bi\", \"bi-bell\"], [\"role\", \"button\", 1, \"button-48\", \"float-end\", 3, \"click\"], [1, \"text\"], [1, \"bi\", \"bi-calendar2-x\"]],\n  template: function AddnotificationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AddnotificationComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Enter Notification Message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 4, 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AddnotificationComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.notification.notificationmess = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"button\", 6);\n      i0.ɵɵelement(9, \"i\", 7);\n      i0.ɵɵtext(10, \" Post\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"p\", 8);\n      i0.ɵɵtext(12, \" Previous Notifications\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 9);\n      i0.ɵɵtemplate(14, AddnotificationComponent_ul_14_Template, 8, 1, \"ul\", 10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.notification.notificationmess);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.notification);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddnotificationComponent_ul_14_Template_button_click_4_listener","restoredCtx","ɵɵrestoreView","_r5","item_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","delmess","_id","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","notificationmess","AddnotificationComponent","constructor","serv","notification","ngOnInit","fetchmessage","submit","addmessage","subscribe","res","alert","id","delmessage","data","console","log","viewmessage","notifications","ɵɵdirectiveInject","i1","NotificationService","selectors","decls","vars","consts","template","AddnotificationComponent_Template","rf","ctx","AddnotificationComponent_Template_form_ngSubmit_0_listener","AddnotificationComponent_Template_input_ngModelChange_5_listener","$event","ɵɵtemplate","AddnotificationComponent_ul_14_Template","ɵɵproperty"],"sources":["C:\\Users\\ViveK\\Documents\\FSD\\Main_project\\Frontend\\src\\app\\pages\\addnotification\\addnotification.component.ts","C:\\Users\\ViveK\\Documents\\FSD\\Main_project\\Frontend\\src\\app\\pages\\addnotification\\addnotification.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NotificationService } from 'src/app/shared/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-addnotification',\r\n  templateUrl: './addnotification.component.html',\r\n  styleUrls: ['./addnotification.component.css']\r\n})\r\nexport class AddnotificationComponent implements OnInit {\r\n\r\n  notification={\r\n    notificationmess:''\r\n  };\r\n\r\n  notifications:any;\r\n\r\n  constructor(public serv:NotificationService){}\r\n\r\n  ngOnInit():void{\r\n    this.fetchmessage();\r\n  }\r\n\r\n  submit() {\r\n    this.serv.addmessage(this.notification).subscribe(res => {\r\n      alert('Message posted on homepage');\r\n      this.notification = {\r\n        notificationmess: ''\r\n      };\r\n      this.fetchmessage(); // Fetch messages again after posting a new message\r\n    });\r\n  }\r\n\r\n  delmess(id: any) {\r\n    this.serv.delmessage(id).subscribe(data => console.log(data));\r\n    alert('Message deleted');\r\n    this.fetchmessage(); // Fetch messages again after deleting a message\r\n  }\r\n\r\n  fetchmessage(): void {\r\n    this.serv.viewmessage().subscribe(data => {\r\n      this.notifications = data;\r\n      console.log(this.notifications);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","<form #addmess=\"ngForm\" (ngSubmit)=\"submit()\">\r\n    <div class=\"form-group\">\r\n      <label for=\"notification\" class=\"text-primary\">Enter Notification Message</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"notification\" placeholder=\"Message...\" name=\"notificationmess\" [(ngModel)]=\"notification.notificationmess\" #notificationmess=\"ngModel\">\r\n    </div>\r\n    <br>\r\n      <button type=\"submit\" class=\"button-86\"><i class=\"bi bi-cloud-upload\"></i> Post</button>\r\n  </form>\r\n\r\n\r\n  <p class=\"lead\">\r\n    Previous Notifications\r\n</p>\r\n\r\n<div class=\"oldnotimess\">\r\n    <ul class=\"list-group\" *ngFor=\"let item of notification\">\r\n        <li class=\"list-group-item\">\r\n            <i class=\"bi bi-bell\"> {{item.notificationmess}} </i>\r\n            <button class=\"button-48 float-end\" (click)=\"delmess(item._id)\" role=\"button\"><span class=\"text\"><i class=\"bi bi-calendar2-x\"></i> Delete</span></button>\r\n        </li>\r\n    </ul>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}