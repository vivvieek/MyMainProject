{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./shared/link.service\";\nimport * as i2 from \"@angular/router\";\nexport class RoleGuard {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const userRole = this.loginService.user.role;\n    if (route.data['roles'].includes(userRole)) {\n      return true; // User has the required role, allow access\n    } else {\n      this.router.navigate(['error']); // Redirect to an error page or another route\n      return false;\n    }\n  }\n}\nRoleGuard.ɵfac = function RoleGuard_Factory(t) {\n  return new (t || RoleGuard)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n};\nRoleGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RoleGuard,\n  factory: RoleGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["RoleGuard","constructor","loginService","router","canActivate","route","state","userRole","user","role","data","includes","navigate","i0","ɵɵinject","i1","LoginService","i2","Router","factory","ɵfac","providedIn"],"sources":["E:\\Main_project\\Frontend\\src\\app\\my-auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './shared/link.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RoleGuard implements CanActivate {\r\n\r\n  constructor(private loginService: LoginService, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const userRole = this.loginService.user.role;\r\n  \r\n    if (route.data['roles'].includes(userRole)) {\r\n      return true; // User has the required role, allow access\r\n    } else {\r\n      this.router.navigate(['error']); // Redirect to an error page or another route\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEzEC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,MAAMC,QAAQ,GAAG,IAAI,CAACL,YAAY,CAACM,IAAI,CAACC,IAAI;IAE5C,IAAIJ,KAAK,CAACK,IAAI,CAAC,OAAO,CAAC,CAACC,QAAQ,CAACJ,QAAQ,CAAC,EAAE;MAC1C,OAAO,IAAI,CAAC,CAAC;KACd,MAAM;MACL,IAAI,CAACJ,MAAM,CAACS,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;MACjC,OAAO,KAAK;;EAEhB;;AAbWZ,SAAS,C;mBAATA,SAAS,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATlB,SAAS,C;SAATA,SAAS;EAAAmB,OAAA,EAATnB,SAAS,CAAAoB,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}