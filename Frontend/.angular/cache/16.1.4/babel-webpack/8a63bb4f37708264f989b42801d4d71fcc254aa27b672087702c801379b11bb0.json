{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./shared/link.service\";\nexport class UserResolver {\n  constructor(loginService) {\n    this.loginService = loginService;\n  }\n  resolve(route) {\n    return this.loginService.user; // Directly access the user data from the service\n  }\n}\n\nUserResolver.ɵfac = function UserResolver_Factory(t) {\n  return new (t || UserResolver)(i0.ɵɵinject(i1.LoginService));\n};\nUserResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserResolver,\n  factory: UserResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UserResolver","constructor","loginService","resolve","route","user","i0","ɵɵinject","i1","LoginService","factory","ɵfac","providedIn"],"sources":["E:\\Main_project\\Frontend\\src\\app\\user-resolver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { LoginService } from './shared/link.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserResolver implements Resolve<any> {\r\n\r\n  constructor(private loginService: LoginService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): any {\r\n    return this.loginService.user; // Directly access the user data from the service\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;EAAiB;EAEjDC,OAAOA,CAACC,KAA6B;IACnC,OAAO,IAAI,CAACF,YAAY,CAACG,IAAI,CAAC,CAAC;EACjC;;;AANWL,YAAY,C;mBAAZA,YAAY,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAAZT,YAAY,C;SAAZA,YAAY;EAAAU,OAAA,EAAZV,YAAY,CAAAW,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}