{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/link.service\";\nimport * as i2 from \"src/app/shared/login-form-visiblity.service\";\nexport class LoginComponent {\n  constructor(loginService, loginFormVisibilityService) {\n    this.loginService = loginService;\n    this.loginFormVisibilityService = loginFormVisibilityService;\n    this.email = '';\n    this.password = '';\n    this.showLoginForm = false;\n    this.submitted = new EventEmitter();\n    this.loginFormOpened = new EventEmitter();\n    this.loginFormVisibilityService.showLoginForm$.subscribe(visibility => {\n      this.showLoginForm = visibility;\n    });\n  }\n  toggleLoginForm() {\n    this.showLoginForm = !this.showLoginForm;\n    this.loginFormVisibilityService.setShowLoginFormVisibility(this.showLoginForm);\n    this.loginFormOpened.emit(this.showLoginForm);\n  }\n  onSubmit() {\n    // Implement your login logic here\n    // For simplicity, we will just consider a successful login\n    // You can add proper validation and authentication logic here\n    // Emit the 'submitted' event when the form is submitted\n    this.submitted.emit();\n    // Call the login service to perform the API call to your backend server\n    this.loginService.login(this.email, this.password).subscribe(response => {\n      // Login successful\n      alert('Login successful');\n      // You can perform further actions here, such as redirecting the user to a dashboard page.\n    }, error => {\n      // Login failed\n      alert('Invalid credentials');\n    });\n    // Hide the login form after successful login\n    this.loginFormVisibilityService.setShowLoginFormVisibility(false);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.LoginFormVisibilityService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  outputs: {\n    submitted: \"submitted\",\n    loginFormOpened: \"loginFormOpened\"\n  },\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"heading\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\", 1, \"label\"], [\"type\", \"email\", \"placeholder\", \"Enter email\", \"id\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\", 1, \"label\"], [\"type\", \"password\", \"placeholder\", \"Enter password\", \"id\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"submit\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n      i0.ɵɵtext(3, \"User Log-In\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  styles: [\".container[_ngcontent-%COMP%] {\\n    max-width: 400px; \\n\\n    background-color: #ffffff; \\n\\n    border: 0px solid #000000; \\n\\n    border-radius: 20px; \\n\\n    padding: 20px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); \\n\\n    height: 350px;\\n   \\n    background-size: cover;\\n    \\n  }\\n  \\n  .heading[_ngcontent-%COMP%] {\\n    text-align: center;\\n    color: #fff; \\n\\n    background-color: #007bff; \\n\\n    padding: 10px;\\n    margin-bottom: 15px;\\n    border-radius: 10px; \\n\\n  }\\n  \\n\\n.form-group[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n  border: 1px solid #000000;\\n  color: #ffffff; \\n\\n}\\n\\n.label[_ngcontent-%COMP%]{\\n    margin-top: 15px;\\n\\n}\\n\\n\\n.form-group[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%]::placeholder, .form-group[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%]::placeholder {\\n  color: #000000; \\n\\n}\\n  \\n  .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    color: #ffffff; \\n\\n  }\\n  \\n  \\n\\n  .form-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    background-color: #007bff;\\n  }\\n  \\n  \\n\\n  .form-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n    background-color: #0056b3;\\n  }\\n  #submit[_ngcontent-%COMP%]{\\n    margin-left: 140px;\\n    margin-top: 40px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxnQkFBZ0IsRUFBRSwrQkFBK0I7SUFDakQseUJBQXlCLEVBQUUsNkNBQTZDO0lBQ3hFLHlCQUF5QixFQUFFLGdCQUFnQjtJQUMzQyxtQkFBbUIsRUFBRSxvQkFBb0I7SUFDekMsYUFBYTtJQUNiLHdDQUF3QyxFQUFFLDRCQUE0QjtJQUN0RSxhQUFhOztJQUViLHNCQUFzQjs7RUFFeEI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsV0FBVyxFQUFFLHFCQUFxQjtJQUNsQyx5QkFBeUIsRUFBRSwwQ0FBMEM7SUFDckUsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixtQkFBbUIsRUFBRSxvQ0FBb0M7RUFDM0Q7RUFDQSx1REFBdUQ7QUFDekQ7O0VBRUUseUJBQXlCO0VBQ3pCLGNBQWMsRUFBRSwyQkFBMkI7QUFDN0M7O0FBRUE7SUFDSSxnQkFBZ0I7O0FBRXBCO0FBQ0EsMENBQTBDO0FBQzFDOztFQUVFLGNBQWMsRUFBRSxpQ0FBaUM7QUFDbkQ7O0VBRUU7Ozs7SUFJRSxjQUFjLEVBQUUscUJBQXFCO0VBQ3ZDOztFQUVBLDBDQUEwQztFQUMxQztJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQSxnRUFBZ0U7RUFDaEU7SUFDRSx5QkFBeUI7RUFDM0I7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixnQkFBZ0I7RUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4OyAvKiBBZGp1c3QgdGhlIHdpZHRoIGFzIG5lZWRlZCAqL1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsgLyogV2hpdGUgYmFja2dyb3VuZCBjb2xvciBmb3IgdGhlIGNvbnRhaW5lciAqL1xyXG4gICAgYm9yZGVyOiAwcHggc29saWQgIzAwMDAwMDsgLyogQmx1ZSBib3JkZXIgKi9cclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7IC8qIFJvdW5kZWQgY29ybmVycyAqL1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7IC8qIEFkZCBhIHN1YnRsZSBib3ggc2hhZG93ICovXHJcbiAgICBoZWlnaHQ6IDM1MHB4O1xyXG4gICBcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBcclxuICB9XHJcbiAgXHJcbiAgLmhlYWRpbmcge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6ICNmZmY7IC8qIFdoaXRlIGZvbnQgY29sb3IgKi9cclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7IC8qIEJsdWUgYmFja2dyb3VuZCBjb2xvciBmb3IgdGhlIGhlYWRpbmcgKi9cclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDsgLyogUm91bmRlZCBjb3JuZXJzIGZvciB0aGUgaGVhZGluZyAqL1xyXG4gIH1cclxuICAvKiBCbHVlIGJvcmRlciBmb3IgdGhlIGVtYWlsIGFuZCBwYXNzd29yZCBpbnB1dCBib3hlcyAqL1xyXG4uZm9ybS1ncm91cCBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXHJcbi5mb3JtLWdyb3VwIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcclxuICBjb2xvcjogI2ZmZmZmZjsgLyogU2V0IHRleHQgY29sb3IgdG8gYmx1ZSAqL1xyXG59XHJcblxyXG4ubGFiZWx7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG5cclxufVxyXG4vKiBMaWdodCBibHVlIGNvbG9yIGZvciB0aGUgcGxhY2Vob2xkZXJzICovXHJcbi5mb3JtLWdyb3VwIGlucHV0W3R5cGU9XCJlbWFpbFwiXTo6cGxhY2Vob2xkZXIsXHJcbi5mb3JtLWdyb3VwIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXTo6cGxhY2Vob2xkZXIge1xyXG4gIGNvbG9yOiAjMDAwMDAwOyAvKiBMaWdodCBibHVlIHBsYWNlaG9sZGVyIGNvbG9yICovXHJcbn1cclxuICBcclxuICAuZm9ybS1ncm91cCBsYWJlbCxcclxuICAuZm9ybS1ncm91cCBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXHJcbiAgLmZvcm0tZ3JvdXAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxyXG4gIC5mb3JtLWdyb3VwIGJ1dHRvbiB7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjsgLyogV2hpdGUgdGV4dCBjb2xvciAqL1xyXG4gIH1cclxuICBcclxuICAvKiBCbHVlIGJhY2tncm91bmQgZm9yIHRoZSBzdWJtaXQgYnV0dG9uICovXHJcbiAgLmZvcm0tZ3JvdXAgYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIEFkZCBhIGRhcmtlciBibHVlIGJhY2tncm91bmQgZm9yIHRoZSBzdWJtaXQgYnV0dG9uIG9uIGhvdmVyICovXHJcbiAgLmZvcm0tZ3JvdXAgYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XHJcbiAgfVxyXG4gICNzdWJtaXR7XHJcbiAgICBtYXJnaW4tbGVmdDogMTQwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["EventEmitter","LoginComponent","constructor","loginService","loginFormVisibilityService","email","password","showLoginForm","submitted","loginFormOpened","showLoginForm$","subscribe","visibility","toggleLoginForm","setShowLoginFormVisibility","emit","onSubmit","login","response","alert","error","i0","ɵɵdirectiveInject","i1","LoginService","i2","LoginFormVisibilityService","selectors","outputs","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_input_ngModelChange_8_listener","$event","LoginComponent_Template_input_ngModelChange_12_listener","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Main_project\\Frontend\\src\\app\\pages\\login\\login.component.ts","E:\\Main_project\\Frontend\\src\\app\\pages\\login\\login.component.html"],"sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { LoginService } from 'src/app/shared/link.service';\r\nimport { LoginFormVisibilityService } from 'src/app/shared/login-form-visiblity.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  email: string = '';\r\n  password: string = '';\r\n  showLoginForm: boolean = false;\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private loginFormVisibilityService: LoginFormVisibilityService\r\n  ) {\r\n    this.loginFormVisibilityService.showLoginForm$.subscribe(\r\n      (visibility: boolean) => {\r\n        this.showLoginForm = visibility;\r\n      }\r\n    );\r\n  }\r\n\r\n  @Output() submitted = new EventEmitter<void>();\r\n  @Output() loginFormOpened = new EventEmitter<boolean>();\r\n\r\n  toggleLoginForm() {\r\n    this.showLoginForm = !this.showLoginForm;\r\n    this.loginFormVisibilityService.setShowLoginFormVisibility(this.showLoginForm);\r\n    this.loginFormOpened.emit(this.showLoginForm);\r\n  }\r\n\r\n  onSubmit() {\r\n    // Implement your login logic here\r\n    // For simplicity, we will just consider a successful login\r\n    // You can add proper validation and authentication logic here\r\n\r\n    // Emit the 'submitted' event when the form is submitted\r\n    this.submitted.emit();\r\n\r\n    // Call the login service to perform the API call to your backend server\r\n    this.loginService.login(this.email, this.password).subscribe(\r\n      (response) => {\r\n        // Login successful\r\n        alert('Login successful');\r\n        // You can perform further actions here, such as redirecting the user to a dashboard page.\r\n      },\r\n      (error) => {\r\n        // Login failed\r\n        alert('Invalid credentials');\r\n      }\r\n    );\r\n\r\n    // Hide the login form after successful login\r\n    this.loginFormVisibilityService.setShowLoginFormVisibility(false);\r\n  }\r\n}\r\n","<!-- login.component.html -->\r\n<div class=\"container mt-4\">\r\n  <div class=\"heading\">\r\n    <h3>User Log-In</h3>\r\n  </div>\r\n  <form (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n      <label class=\"label\" for=\"email\">Email</label>\r\n      <input type=\"email\" class=\"form-control\" placeholder=\"Enter email\" id=\"email\" required [(ngModel)]=\"email\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label class=\"label\" for=\"password\">Password</label>\r\n      <input type=\"password\" class=\"form-control\" placeholder=\"Enter password\" id=\"password\"  required [(ngModel)]=\"password\">\r\n    </div>\r\n    <button id=\"submit\" type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n"],"mappings":"AAAA,SAA4BA,YAAY,QAAQ,eAAe;;;;AAS/D,OAAM,MAAOC,cAAc;EAKzBC,YACUC,YAA0B,EAC1BC,0BAAsD;IADtD,KAAAD,YAAY,GAAZA,YAAY;IACZ,KAAAC,0BAA0B,GAA1BA,0BAA0B;IANpC,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,aAAa,GAAY,KAAK;IAapB,KAAAC,SAAS,GAAG,IAAIR,YAAY,EAAQ;IACpC,KAAAS,eAAe,GAAG,IAAIT,YAAY,EAAW;IARrD,IAAI,CAACI,0BAA0B,CAACM,cAAc,CAACC,SAAS,CACrDC,UAAmB,IAAI;MACtB,IAAI,CAACL,aAAa,GAAGK,UAAU;IACjC,CAAC,CACF;EACH;EAKAC,eAAeA,CAAA;IACb,IAAI,CAACN,aAAa,GAAG,CAAC,IAAI,CAACA,aAAa;IACxC,IAAI,CAACH,0BAA0B,CAACU,0BAA0B,CAAC,IAAI,CAACP,aAAa,CAAC;IAC9E,IAAI,CAACE,eAAe,CAACM,IAAI,CAAC,IAAI,CAACR,aAAa,CAAC;EAC/C;EAEAS,QAAQA,CAAA;IACN;IACA;IACA;IAEA;IACA,IAAI,CAACR,SAAS,CAACO,IAAI,EAAE;IAErB;IACA,IAAI,CAACZ,YAAY,CAACc,KAAK,CAAC,IAAI,CAACZ,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACK,SAAS,CACzDO,QAAQ,IAAI;MACX;MACAC,KAAK,CAAC,kBAAkB,CAAC;MACzB;IACF,CAAC,EACAC,KAAK,IAAI;MACR;MACAD,KAAK,CAAC,qBAAqB,CAAC;IAC9B,CAAC,CACF;IAED;IACA,IAAI,CAACf,0BAA0B,CAACU,0BAA0B,CAAC,KAAK,CAAC;EACnE;;AAhDWb,cAAc,C;mBAAdA,cAAc,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,0BAAA;AAAA;AAAdzB,cAAc,C;QAAdA,cAAc;EAAA0B,SAAA;EAAAC,OAAA;IAAApB,SAAA;IAAAC,eAAA;EAAA;EAAAoB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR3Bb,EAAA,CAAAe,cAAA,aAA4B;MAEpBf,EAAA,CAAAgB,MAAA,kBAAW;MAAAhB,EAAA,CAAAiB,YAAA,EAAK;MAEtBjB,EAAA,CAAAe,cAAA,cAA8B;MAAxBf,EAAA,CAAAkB,UAAA,sBAAAC,iDAAA;QAAA,OAAYL,GAAA,CAAAnB,QAAA,EAAU;MAAA,EAAC;MAC3BK,EAAA,CAAAe,cAAA,aAAwB;MACWf,EAAA,CAAAgB,MAAA,YAAK;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MAC9CjB,EAAA,CAAAe,cAAA,eAA2G;MAApBf,EAAA,CAAAkB,UAAA,2BAAAE,uDAAAC,MAAA;QAAA,OAAAP,GAAA,CAAA9B,KAAA,GAAAqC,MAAA;MAAA,EAAmB;MAA1GrB,EAAA,CAAAiB,YAAA,EAA2G;MAE7GjB,EAAA,CAAAe,cAAA,aAAwB;MACcf,EAAA,CAAAgB,MAAA,gBAAQ;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MACpDjB,EAAA,CAAAe,cAAA,gBAAwH;MAAvBf,EAAA,CAAAkB,UAAA,2BAAAI,wDAAAD,MAAA;QAAA,OAAAP,GAAA,CAAA7B,QAAA,GAAAoC,MAAA;MAAA,EAAsB;MAAvHrB,EAAA,CAAAiB,YAAA,EAAwH;MAE1HjB,EAAA,CAAAe,cAAA,iBAA0D;MAAAf,EAAA,CAAAgB,MAAA,cAAM;MAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;MANgBjB,EAAA,CAAAuB,SAAA,GAAmB;MAAnBvB,EAAA,CAAAwB,UAAA,YAAAV,GAAA,CAAA9B,KAAA,CAAmB;MAITgB,EAAA,CAAAuB,SAAA,GAAsB;MAAtBvB,EAAA,CAAAwB,UAAA,YAAAV,GAAA,CAAA7B,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}