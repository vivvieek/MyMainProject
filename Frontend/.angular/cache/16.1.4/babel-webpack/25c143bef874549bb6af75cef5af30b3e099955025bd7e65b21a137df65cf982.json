{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TokeninterceptorService {\n  constructor() {}\n  intercept(req, next) {\n    let token = localStorage.getItem('token');\n    let tokenizedrequest = req.clone({\n      setHeaders: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    return next.handle(tokenizedrequest);\n  }\n}\nTokeninterceptorService.ɵfac = function TokeninterceptorService_Factory(t) {\n  return new (t || TokeninterceptorService)();\n};\nTokeninterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TokeninterceptorService,\n  factory: TokeninterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["TokeninterceptorService","constructor","intercept","req","next","token","localStorage","getItem","tokenizedrequest","clone","setHeaders","Authorization","handle","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ViveK\\Documents\\FSD\\Main_project\\Frontend\\src\\app\\tokeninterceptor.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokeninterceptorService implements HttpInterceptor{\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let token=localStorage.getItem('token');\r\n    let tokenizedrequest=req.clone({\r\n      setHeaders:{Authorization:'Bearer '+token}\r\n    })\r\n    return next.handle(tokenizedrequest);\r\n  }\r\n}"],"mappings":";AAOA,OAAM,MAAOA,uBAAuB;EAElCC,YAAA,GAAgB;EAEhBC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAIC,KAAK,GAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACvC,IAAIC,gBAAgB,GAACL,GAAG,CAACM,KAAK,CAAC;MAC7BC,UAAU,EAAC;QAACC,aAAa,EAAC,SAAS,GAACN;MAAK;KAC1C,CAAC;IACF,OAAOD,IAAI,CAACQ,MAAM,CAACJ,gBAAgB,CAAC;EACtC;;AAVWR,uBAAuB,C;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB,C;SAAvBA,uBAAuB;EAAAa,OAAA,EAAvBb,uBAAuB,CAAAc,IAAA;EAAAC,UAAA,EAFtB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}