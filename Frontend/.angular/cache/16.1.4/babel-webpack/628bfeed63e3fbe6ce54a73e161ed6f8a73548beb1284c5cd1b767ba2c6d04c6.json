{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./shared/link.service\";\nimport * as i2 from \"@angular/router\";\n// export const authGuard: CanActivateFn = (route, state) => {\n//   return true;\n// };\nexport class authGuard2 {\n  constructor(auth, route) {\n    this.auth = auth;\n    this.route = route;\n  }\n  canActivate2() {\n    if (this.auth.loggedIn()) {\n      return true;\n    } else {\n      this.route.navigate(['']);\n      return false;\n    }\n  }\n}\nauthGuard2.ɵfac = function authGuard2_Factory(t) {\n  return new (t || authGuard2)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n};\nauthGuard2.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: authGuard2,\n  factory: authGuard2.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["authGuard2","constructor","auth","route","canActivate2","loggedIn","navigate","i0","ɵɵinject","i1","LoginService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ViveK\\Documents\\FSD\\Main_project\\Frontend\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './shared/link.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// export const authGuard: CanActivateFn = (route, state) => {\r\n//   return true;\r\n// };\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\n\r\nexport class authGuard2{\r\n  isToken!:boolean;\r\n  \r\n  constructor(private auth:LoginService,private route:Router){}\r\n  \r\n  canActivate2(){\r\n    \r\n    if(this.auth.loggedIn()){\r\n      return true;\r\n    }\r\n    else{\r\n      this.route.navigate([''])\r\n      return false\r\n    }\r\n  }\r\n\r\n}"],"mappings":";;;AAMA;AACA;AACA;AAMA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAiB,EAASC,KAAY;IAAtC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,KAAK,GAALA,KAAK;EAAS;EAE5DC,YAAYA,CAAA;IAEV,IAAG,IAAI,CAACF,IAAI,CAACG,QAAQ,EAAE,EAAC;MACtB,OAAO,IAAI;KACZ,MACG;MACF,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MACzB,OAAO,KAAK;;EAEhB;;AAdWN,UAAU,C;mBAAVA,UAAU,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAVZ,UAAU,C;SAAVA,UAAU;EAAAa,OAAA,EAAVb,UAAU,CAAAc,IAAA;EAAAC,UAAA,EAHV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}